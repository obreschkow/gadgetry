% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.gadget}
\alias{plot.gadget}
\title{Visualise one or several 3D point sets}
\usage{
\method{plot}{gadget}(
  x,
  center = NULL,
  rotation = 1,
  thickness = NULL,
  width = NULL,
  aspect = 1,
  ngrid = 300,
  kde = TRUE,
  smoothing = NULL,
  types = NULL,
  sample.fraction = 1,
  lum = 1,
  color.model = "hsv",
  hdr = 1,
  fix.luminosity = FALSE,
  screen = TRUE,
  pngfile = NULL,
  pdffile = NULL,
  combine.fun = sum,
  title = NULL,
  title.origin = NULL,
  arrows = TRUE,
  arrow.origin = NULL,
  arrow.length = NULL,
  arrow.lwd = 1.5,
  scale = TRUE,
  scale.origin = NULL,
  scale.length = NULL,
  scale.lwd = 1.5,
  length.unit = "",
  xlab = NULL,
  ylab = NULL,
  cex = 1,
  text.offset = 0,
  text.col = "white",
  ...
)
}
\arguments{
\item{x}{Gadget data type, which must contain at least one sublist PartType# (with #=0,1,...). Each sublist PartType# represents one type of particle (e.g. gas, stars, dark matter) and must contain at least the particles coordinates in an N-by-3 matrix \code{Coordinates}. Other optional elements of PartType# are:\cr
\code{col} = color used to display this particle type. This can be a single color or a vector of colors. If a single color is provided, a range of brightness is produced automatically following the \code{color.model}. If a vector is provided, it is interpreted as a color scale applied to the particles.\cr
\code{color.model} = character string that must be either \code{hsv} or \code{hsl}. In the former case, the color \code{col} is expanded into a color scale ranging from black to that particular color. In the latter case, the color scale ranges from black to white passing through the color \code{col}.\cr
\code{value} = optional N-vector of values, one for each particle, which define the position on the color scale. If not given, particles are colored according to their projected density.\cr
\code{valrange} = optional 2-vector specifying the values corresponding to the limits of the color scale. Only used if the N-vector \code{value} is given.\cr
\code{density.scaling} = logical flag (default TRUE), specifying whether the brightness is scaled with the particle density if \code{value} is given.\cr
\code{lum} = overall scaling factor for the color scale.\cr
\code{hdr} = parameter specifying the size of the dynamic range to be represented by the color scale. The larger the value, the higher the dynamic range.\cr
\code{kde} = logical flag (default TRUE), whether the particles are smoothed using an adaptive kernel density estimator.\cr
\code{smoothing} = smoothing scale in simulation units. If not given, a value is set automatically to one percent of the geometric mean of width and height.\cr\cr}

\item{center}{optional 3-vector specifying the coordinate at the center of the plot. The default is the geometric center (= center of mass, if all particle masses are equal).}

\item{rotation}{either an integer (1-6), a 3-vector or a 3-by-3 matrix, specifying a rotation of the 3D particle positions. In case of an integer: 1=(x,y)-plane, 2=(y,z)-plane, 3=(x,z)-plane, 4=(qmax,qmin)-plane, 5=(qmax,qmid)-plane, 6=(qmid,qmin)-plane, where qmax/qmid/qmin are the eigenvectors of the particle-quadrupole, associated with the maximum/middle/minimum eigenvalues, respectively. If \code{rotation} is a vector, its direction specifies the rotation axis and its norm the rotation angle in radians in the positive geometric sense.}

\item{thickness}{optional thickness of the slice to be plotted in simulation units. If not given, all particles are shown.}

\item{width}{optional horizontal range of the image in simulation units. The default corresponds to the full range of particle positions.}

\item{aspect}{aspect ratio (= width/height).}

\item{ngrid}{number of grid cells per side in the output image. If the image is not square ngrid is interpreted as the geometric mean between the horizontal and the vertical number of pixels, such that the total number of pixels remains about ngrid^2.}

\item{kde}{default value used in \code{dat$PartType#} (see above).}

\item{smoothing}{default value used in \code{dat$PartType#} (see above).}

\item{types}{vector specifying the particle types to be displayed. These numbers must correspond to the # in the sublists PartType#. If not given, all particle species are shown.}

\item{sample.fraction}{fraction of particles to be used. Ff 1, all particles are used, if <1 a random subsample is drawn.}

\item{lum}{default value used in \code{dat$PartType#} (see above).}

\item{color.model}{default value used in \code{dat$PartType#} (see above).}

\item{hdr}{default value used in \code{dat$PartType#} (see above).}

\item{fix.luminosity}{logical flag specifying whether the brightness should scale with the number of particles in the field of view. Set this to \code{FALSE} to avoid luminosity fluctuations in movies.}

\item{screen}{logical flag specifying whether the images is displayed on the screen.}

\item{pngfile}{optional png-filename to save the image as raster image.}

\item{pdffile}{optional pdf-filename to save the image as pdf-file.}

\item{combine.fun}{function used to combined the image layers corresponding to different particle species. Typically, this is set to \code{sum} or \code{mean}.}

\item{title}{Text to be added to the figure.}

\item{title.origin}{optional 2-vector specifying the position of the title}

\item{arrows}{logical flag, specifying if axis-arrows are drawn}

\item{arrow.origin}{optional 2-vector specifying the bottom left corner of the arrows}

\item{arrow.length}{optional number specifying the length of the arrows}

\item{arrow.lwd}{line width of arrows}

\item{scale}{logical flag, specifying if a length scale is shown}

\item{scale.origin}{optional 2-vector specifying the right end of the length scale}

\item{scale.length}{optional number specifying the length of the length scale (is always rounded to one significant digit)}

\item{scale.lwd}{line width of length scale}

\item{length.unit}{character string of length unit (e.g. "m" or "kpc")}

\item{xlab}{label on horizontal arrow (only shown if \code{arrows=TRUE}).}

\item{ylab}{label on vertical arrow (only shown if \code{arrows=TRUE}).}

\item{cex}{text size}

\item{text.offset}{optional extra offset for the arrow and scale labels}

\item{text.col}{color of text, arrows and scale}

\item{...}{additional parameters for \code{\link[graphics]{plot}}}
}
\value{
Returns a structured list of parameters and arrays useful to analyse and reproduce the figure
}
\description{
Produces a raster image visualizing particle positions in 3D N-body/SPH data.
}
\examples{
## Example of 2x1e4 particles

# Produce a density plot with different colors for the two particle species
dat = as.gadget(list(domath::runif3(1e4), array(rnorm(3e4),c(1e4,3))))
graphics::par(mar=c(1,1,1,1))
plot(dat, width=5)

# Only plot particles of species "1" and vary hue with distance from centre
xyradius = as.vector(domath::vectornorm(dat$PartType1$Coordinates[,1:2]))
dat$PartType1$value = xyradius
dat$PartType1$valrange = c(0,2)
graphics::par(mar=c(1,1,1,6))
out = plot(dat, width=5, types=1)
doplot::colorbar(2.7,-2.5,3,2.5,
                    col=out$PartType1$col,clim=out$PartType1$valrange,
                    text='xy-distance from center')

}
\author{
Danail Obreschkow
}
