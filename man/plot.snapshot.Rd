% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.snapshot}
\alias{plot.snapshot}
\title{Visualise one or several 3D point sets}
\usage{
\method{plot}{snapshot}(
  x,
  center = NULL,
  rotation = 1,
  width = NULL,
  fov = NULL,
  depth = NULL,
  taper = FALSE,
  aspect = 1,
  npixels = 300,
  kde = 2,
  smoothing = 1,
  types = NULL,
  sample.fraction = 1,
  lum = 1,
  gamma = 1,
  shadows = 1,
  hdcolors = TRUE,
  screen = TRUE,
  pngfile = NULL,
  pdffile = NULL,
  title = NULL,
  title.origin = NULL,
  arrows = TRUE,
  arrow.origin = NULL,
  arrow.length = NULL,
  arrow.lwd = 1.5,
  scale = TRUE,
  scale.origin = NULL,
  scale.length = NULL,
  scale.lwd = 1.5,
  length.unit = "",
  xlab = NULL,
  ylab = NULL,
  cex = 1,
  text.offset = 0,
  text.col = "white",
  ...
)
}
\arguments{
\item{x}{object of class 'snapshot'. It must contain at least one sublist PartType# (with #=0,1,...). Each sublist PartType# represents one type of particle (e.g. gas, stars, dark matter) and must contain at least the particles coordinates in an N-by-3 matrix \code{Coordinates}. Other optional elements of PartType# are:\cr
\code{col} = color used to display this particle type. This can be a single color or a vector of colors. If a single color is provided, a range of brightness of that color is produced automatically .\cr
\code{value} = optional N-vector of values, one for each particle, which define the position on the color scale. If not given, particles are colored according to their projected density.\cr
\code{valrange} = optional 2-vector specifying the values corresponding to the limits of the color scale. Only used if the N-vector \code{value} is given.\cr
\code{density.scaling} = logical flag (default TRUE), specifying whether the brightness is scaled with the particle density if \code{value} is given.\cr
\code{lum} = overall scaling factor for the color scale.\cr
\code{gamma} = gamma parameter setting the non-linear conversion between density and brightness/color. The larger the value, the higher the dynamic range.\cr
\code{kde} = integer, setting the density estimation method. 0: Gaussian blur, 1 Fast approximate kernel density estimation, 2: More accurate 3D-density-based local kernel density estimation.\cr
\code{smoothing} = linear smoothing factor (default 1) to adjust the automatically determined size of the (adaptive or fixed) smoothing kernels.\cr
\code{ref.density} = optional number specifying a fixed reference density (number of particles per area, in units of 1/(length unit)^2) used for luminosity normalization; fixing this value allows to suppress brightness fluctuations between snapshots (e.g. in movies).\cr\cr}

\item{center}{optional 3-vector specifying the coordinate at the center of the plot. The default is the geometric center (= center of mass, if all particle masses are equal).}

\item{rotation}{either an integer (1-6), a 3-vector or a 3-by-3 matrix, specifying a rotation of the 3D particle positions. In case of an integer: 1=(x,y)-plane, 2=(y,z)-plane, 3=(x,z)-plane, 4=(qmax,qmin)-plane, 5=(qmax,qmid)-plane, 6=(qmid,qmin)-plane, where qmax/qmid/qmin are the eigenvectors of the particle-quadrupole, associated with the maximum/middle/minimum eigenvalues, respectively. If \code{rotation} is a vector, its direction specifies the rotation axis and its norm the rotation angle in radians in the positive geometric sense.}

\item{width}{optional horizontal range of the image in simulation units. The default corresponds to the full range of particle positions. If a field-of-view is specified by the parameter \code{fov}, the width of the view is superseded by the latter and the value of \code{width} is used to normalised the smoothing lengths.}

\item{fov}{optional field-of-view in degrees. If non-specified an orthogonal projection is applied. If specified, a stereographic projection is applied, such that the width of the image shows exactly the number of degrees specified by \code{fov}.}

\item{depth}{optional depth of the slice/field to be shown. In the case of an orthogonal projection (fov=NULL) all particles that lie within -depth/2 to +depth/2 are shown. In the case of a stereographic projection, all particles within a distance \code{depth} from the observer (placed at \code{center}) are shown.}

\item{taper}{logical flag, which is only used if a finite \code{depth} is specified. If \code{taper} is TRUE, the particles are faded out towards the edges of the depth range, using a cubic spline kernel (Monaghan 1992), whose characteristic width corresponds to \code{depth}.}

\item{aspect}{aspect ratio (= width/height).}

\item{npixels}{number of grid cells per side in the output image. If the image is not square npixels is interpreted as the geometric mean between the horizontal and the vertical number of pixels, such that the total number of pixels remains about npixels^2.}

\item{kde}{default value used in \code{dat$PartType#} (see above).}

\item{smoothing}{default value used in \code{dat$PartType#} (see above).}

\item{types}{vector specifying the particle types to be displayed. These numbers must correspond to the # in the sublists PartType#. If not given, all particle species are shown.}

\item{sample.fraction}{fraction of particles to be used. Ff 1, all particles are used, if <1 a random subsample is drawn.}

\item{lum}{default value used in \code{dat$PartType#} (see above).}

\item{gamma}{default value used in \code{dat$PartType#} (see above).}

\item{shadows}{overall contrast value.}

\item{hdcolors}{logical flag. If TRUE, input color scales are slightly smoothed to avoid spurious slight color jumps steps due to 8-bit color representation.}

\item{screen}{logical flag specifying whether the images is displayed on the screen.}

\item{pngfile}{optional png-filename to save the image as raster image.}

\item{pdffile}{optional pdf-filename to save the image as pdf-file.}

\item{title}{Text to be added to the figure.}

\item{title.origin}{optional 2-vector specifying the position of the title}

\item{arrows}{logical flag, specifying if axis-arrows are drawn}

\item{arrow.origin}{optional 2-vector specifying the bottom left corner of the arrows}

\item{arrow.length}{optional number specifying the length of the arrows}

\item{arrow.lwd}{line width of arrows}

\item{scale}{logical flag, specifying if a length scale is shown}

\item{scale.origin}{optional 2-vector specifying the right end of the length scale}

\item{scale.length}{optional number specifying the length of the length scale (is always rounded to one significant digit)}

\item{scale.lwd}{line width of length scale}

\item{length.unit}{character string of length unit (e.g. "m" or "kpc")}

\item{xlab}{label on horizontal arrow (only shown if \code{arrows=TRUE}).}

\item{ylab}{label on vertical arrow (only shown if \code{arrows=TRUE}).}

\item{cex}{text size}

\item{text.offset}{optional extra offset for the arrow and scale labels}

\item{text.col}{color of text, arrows and scale}

\item{...}{additional parameters for \code{\link[graphics]{plot}}}
}
\value{
Returns a structured list of parameters and arrays useful to analyse and reproduce the figure.
}
\description{
Produces a raster image visualizing particle positions in 3D N-body/SPH data.
}
\examples{
# plot test snapshot
filename = system.file('test_snapshot.hdf5', package='gadgetry')
sn = readsnapshot(filename)
plot(sn)

# prettify the plot
sn$PartType1$smoothing = 7
sn$PartType2$smoothing = 2.5
sn$PartType2$lum = 0.3
sn$PartType2$gamma = 0.8
sn$PartType2$col = '#ff4444'
out = plot(sn, length.unit='kpc', width=600,shadows=1.2)
col = cooltools::lightness(allpart(out, 'col'), 0.7)
legend(-300,300,c('Dark matter','Stars'),
       col=col,pch=16,text.col=col,bty='n')

}
\seealso{
\code{\link{plot4}}
}
\author{
Danail Obreschkow
}
